{"ast":null,"code":"import axios from 'axios';\nconst url = 'https://covid19.mathdro.id/api';\nconst dailyurl = 'https://covid19.mathdro.id/api/daily';\nconst countriesurl = 'https://covid19.mathdro.id/api/countries';\nexport const fetchData = async country => {\n  let changeableUrl = url;\n\n  if (country) {\n    //changeableUrl = url+'/countries' + '/country=' + country;\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: {\n        confirmed,\n        recovered,\n        deaths,\n        lastUpdate\n      }\n    } = await axios.get(changeableUrl);\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchDailyData = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(dailyurl);\n    const modifiedData = data.map(dailtData => ({\n      confirmed: dailtData.confirmed.total,\n      deaths: dailtData.deaths.total,\n      date: dailtData.reportDate\n    }));\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: {\n        countries\n      }\n    } = await axios.get(countriesurl);\n    return countries.map(country => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n}; // https://covid19.mathdro.id/api/countries/India/confirmed\n\nexport const fetchStates = async country => {\n  try {\n    const {\n      data\n    } = await axios.get(`${url}/countries/${country.country}/confirmed`);\n    const modifiedData = data.map(stateData => ({\n      provinceState: stateData.provinceState,\n      confirmed: stateData.confirmed,\n      active: stateData.active,\n      recovered: stateData.recovered,\n      deaths: stateData.deaths\n    }));\n    console.log(modifiedData);\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/bhard/Downloads/COVID-19_tracker_reactjs-master/src/api/index.js"],"names":["axios","url","dailyurl","countriesurl","fetchData","country","changeableUrl","data","confirmed","recovered","deaths","lastUpdate","get","error","console","log","fetchDailyData","modifiedData","map","dailtData","total","date","reportDate","fetchCountries","countries","name","fetchStates","stateData","provinceState","active"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,gCAAZ;AACA,MAAMC,QAAQ,GAAG,sCAAjB;AACA,MAAMC,YAAY,GAAG,0CAArB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAOC,OAAP,IAAmB;AACxC,MAAIC,aAAa,GAAGL,GAApB;;AAEA,MAAII,OAAJ,EAAa;AACT;AACAC,IAAAA,aAAa,GAAI,GAAEL,GAAI,cAAaI,OAAQ,EAA5C;AACH;;AACD,MAAI;AACA,UAAM;AAAEE,MAAAA,IAAI,EAAE;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,SAAb;AAAwBC,QAAAA,MAAxB;AAAgCC,QAAAA;AAAhC;AAAR,QAAyD,MAAMX,KAAK,CAACY,GAAN,CAAUN,aAAV,CAArE;AAEA,WAAO;AAAEE,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA,MAAxB;AAAgCC,MAAAA;AAAhC,KAAP;AACH,GAJD,CAIE,OAAOE,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAdM;AAgBP,OAAO,MAAMG,cAAc,GAAG,YAAY;AACtC,MAAI;AACA,UAAM;AAAET,MAAAA;AAAF,QAAW,MAAMP,KAAK,CAACY,GAAN,CAAUV,QAAV,CAAvB;AAEA,UAAMe,YAAY,GAAGV,IAAI,CAACW,GAAL,CAAUC,SAAD,KAAgB;AAC1CX,MAAAA,SAAS,EAAEW,SAAS,CAACX,SAAV,CAAoBY,KADW;AAE1CV,MAAAA,MAAM,EAAES,SAAS,CAACT,MAAV,CAAiBU,KAFiB;AAG1CC,MAAAA,IAAI,EAAEF,SAAS,CAACG;AAH0B,KAAhB,CAAT,CAArB;AAMA,WAAOL,YAAP;AACH,GAVD,CAUE,OAAOJ,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAdM;AAgBP,OAAO,MAAMU,cAAc,GAAG,YAAY;AACtC,MAAI;AACA,UAAM;AAAEhB,MAAAA,IAAI,EAAE;AAAEiB,QAAAA;AAAF;AAAR,QAA0B,MAAMxB,KAAK,CAACY,GAAN,CAAUT,YAAV,CAAtC;AAEA,WAAOqB,SAAS,CAACN,GAAV,CAAeb,OAAD,IAAaA,OAAO,CAACoB,IAAnC,CAAP;AACH,GAJD,CAIE,OAAOZ,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CARM,C,CASP;;AACA,OAAO,MAAMa,WAAW,GAAG,MAAOrB,OAAP,IAAmB;AAC1C,MAAI;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAMP,KAAK,CAACY,GAAN,CAAW,GAAEX,GAAI,cAAaI,OAAO,CAACA,OAAQ,YAA9C,CAAvB;AAEA,UAAMY,YAAY,GAAGV,IAAI,CAACW,GAAL,CAAUS,SAAD,KAAgB;AAC1CC,MAAAA,aAAa,EAAED,SAAS,CAACC,aADiB;AAE1CpB,MAAAA,SAAS,EAAEmB,SAAS,CAACnB,SAFqB;AAG1CqB,MAAAA,MAAM,EAAEF,SAAS,CAACE,MAHwB;AAI1CpB,MAAAA,SAAS,EAAEkB,SAAS,CAAClB,SAJqB;AAK1CC,MAAAA,MAAM,EAAEiB,SAAS,CAACjB;AALwB,KAAhB,CAAT,CAArB;AAQAI,IAAAA,OAAO,CAACC,GAAR,CAAYE,YAAZ;AACA,WAAOA,YAAP;AACH,GAbD,CAaE,OAAOJ,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAjBM","sourcesContent":["import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\nconst dailyurl = 'https://covid19.mathdro.id/api/daily';\nconst countriesurl = 'https://covid19.mathdro.id/api/countries';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if (country) {\n        //changeableUrl = url+'/countries' + '/country=' + country;\n        changeableUrl = `${url}/countries/${country}`;\n    }\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n       \n        return { confirmed, recovered, deaths, lastUpdate };\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(dailyurl);\n\n        const modifiedData = data.map((dailtData) => ({\n            confirmed: dailtData.confirmed.total,\n            deaths: dailtData.deaths.total,\n            date: dailtData.reportDate,\n        }));\n\n        return modifiedData;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries } } = await axios.get(countriesurl);\n\n        return countries.map((country) => country.name);\n    } catch (error) {\n        console.log(error);\n    }\n}\n// https://covid19.mathdro.id/api/countries/India/confirmed\nexport const fetchStates = async (country) => {\n    try {\n        const { data } = await axios.get(`${url}/countries/${country.country}/confirmed`);\n        \n        const modifiedData = data.map((stateData) => ({\n            provinceState: stateData.provinceState,\n            confirmed: stateData.confirmed,\n            active: stateData.active,\n            recovered: stateData.recovered,\n            deaths: stateData.deaths,\n        }));\n\n        console.log(modifiedData);\n        return modifiedData;\n    } catch (error) {\n        console.log(error);\n    }\n}"]},"metadata":{},"sourceType":"module"}